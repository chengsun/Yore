// generate event lists and types
// events are | <name>
// or         > <name>
// for initial and follow-on events resp
// event parameters are <type> <name> separated by whitespace (the type may contain whitespace)
// if <type> is MonsID or ItemID it will automatically check for existence before the event unless (optional) is specified
// if <type> is MonsID it will automatically poll the monster after the event unless (nopoll) is specified

| dlevel_heartbeat
	int dlevel
| itrot
	ItemID itemID
| mthrow mons.throw
	MonsID monsID
	ItemID itemID
	int ydest // TODO: should be ydir and xdir? what if monster is relocated before throwing
	int xdest
| proj_move item.flight
	ItemID itemID
	struct BresState bres
	int speed
	MonsID frID (optional) (nopoll)
| item_explode
	ItemID itemID
	int force
| line_explode
	int dlevel
	int zloc
	struct BresState bres
	int dist
| mdomove mons.move
	MonsID monsID
	int zdir
	int ydir
	int xdir
| mdoevade mons.evade
	MonsID monsID
	int zdir
	int ydir
	int xdir
> munevade
	MonsID monsID
| mdoshield mons.shield
	MonsID monsID
	int ydir
	int xdir
> munshield
	MonsID monsID
| mdohit mons.hit
	MonsID frID
	int arm
	int zdir
	int ydir
	int xdir
| mpoll
	MonsID monsID (nopoll)
| mgen
	int dlevel
| mregen
	MonsID monsID (nopoll)
| mbleed mons.bleed (no-restart)
	MonsID monsID
| mwield mons.wield
	MonsID monsID
	int arm
	ItemID itemID (optional)
> mdowield
	MonsID monsID
	int arm
	ItemID itemID
| mwear_armour mons.wear
	MonsID monsID
	ItemID itemID
	size_t offset
| mtakeoff_armour mons.takeoff
	MonsID monsID
	ItemID itemID
| mpickup mons.pickup
	MonsID monsID
	V_ItemID pickup
| mdrop mons.drop
	MonsID monsID
	V_ItemID items
| mdocharge mons.charge
	MonsID monsID
> mstopcharge
	MonsID monsID
| mfireball
	MonsID monsID
	int ydest
	int xdest
	int attk
| mwater_bolt
	MonsID monsID
	int ydest
	int xdest
	int attk
| mfrost
	MonsID monsID
	int zdest
	int ydest
	int xdest
	int radius
| mflash mons.flash
	MonsID monsID
	int speed
	Tick duration
| mstopflash
	MonsID monsID
| mopendoor
	MonsID monsID
	int ydest
	int xdest
| mclosedoor
	MonsID monsID
	int ydest
	int xdest
| compute item.compute
	ItemID itemID
